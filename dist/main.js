!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=4)}([function(e,t,n){var o=n(1),r=n(2);"string"==typeof(r=r.__esModule?r.default:r)&&(r=[[e.i,r,""]]);var i={insert:"head",singleton:!1};o(r,i);e.exports=r.locals||{}},function(e,t,n){"use strict";var o,r=function(){return void 0===o&&(o=Boolean(window&&document&&document.all&&!window.atob)),o},i=function(){var e={};return function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}e[t]=n}return e[t]}}(),d=[];function c(e){for(var t=-1,n=0;n<d.length;n++)if(d[n].identifier===e){t=n;break}return t}function a(e,t){for(var n={},o=[],r=0;r<e.length;r++){var i=e[r],a=t.base?i[0]+t.base:i[0],l=n[a]||0,u="".concat(a," ").concat(l);n[a]=l+1;var s=c(u),m={css:i[1],media:i[2],sourceMap:i[3]};-1!==s?(d[s].references++,d[s].updater(m)):d.push({identifier:u,updater:g(m,t),references:1}),o.push(u)}return o}function l(e){var t=document.createElement("style"),o=e.attributes||{};if(void 0===o.nonce){var r=n.nc;r&&(o.nonce=r)}if(Object.keys(o).forEach((function(e){t.setAttribute(e,o[e])})),"function"==typeof e.insert)e.insert(t);else{var d=i(e.insert||"head");if(!d)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");d.appendChild(t)}return t}var u,s=(u=[],function(e,t){return u[e]=t,u.filter(Boolean).join("\n")});function m(e,t,n,o){var r=n?"":o.media?"@media ".concat(o.media," {").concat(o.css,"}"):o.css;if(e.styleSheet)e.styleSheet.cssText=s(t,r);else{var i=document.createTextNode(r),d=e.childNodes;d[t]&&e.removeChild(d[t]),d.length?e.insertBefore(i,d[t]):e.appendChild(i)}}function f(e,t,n){var o=n.css,r=n.media,i=n.sourceMap;if(r?e.setAttribute("media",r):e.removeAttribute("media"),i&&btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleSheet)e.styleSheet.cssText=o;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(o))}}var p=null,y=0;function g(e,t){var n,o,r;if(t.singleton){var i=y++;n=p||(p=l(t)),o=m.bind(null,n,i,!1),r=m.bind(null,n,i,!0)}else n=l(t),o=f.bind(null,n,t),r=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)};return o(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;o(e=t)}else r()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=r());var n=a(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var o=0;o<n.length;o++){var r=c(n[o]);d[r].references--}for(var i=a(e,t),l=0;l<n.length;l++){var u=c(n[l]);0===d[u].references&&(d[u].updater(),d.splice(u,1))}n=i}}}},function(e,t,n){(t=n(3)(!1)).push([e.i,".project {\r\n  cursor: pointer;\r\n}\r\n\r\n#addTodoButton {\r\n  display: none;\r\n}\r\n",""]),e.exports=t},function(e,t,n){"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=function(e,t){var n=e[1]||"",o=e[3];if(!o)return n;if(t&&"function"==typeof btoa){var r=(d=o,c=btoa(unescape(encodeURIComponent(JSON.stringify(d)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(c),"/*# ".concat(a," */")),i=o.sources.map((function(e){return"/*# sourceURL=".concat(o.sourceRoot||"").concat(e," */")}));return[n].concat(i).concat([r]).join("\n")}var d,c,a;return[n].join("\n")}(t,e);return t[2]?"@media ".concat(t[2]," {").concat(n,"}"):n})).join("")},t.i=function(e,n,o){"string"==typeof e&&(e=[[null,e,""]]);var r={};if(o)for(var i=0;i<this.length;i++){var d=this[i][0];null!=d&&(r[d]=!0)}for(var c=0;c<e.length;c++){var a=[].concat(e[c]);o&&r[a[0]]||(n&&(a[2]?a[2]="".concat(n," and ").concat(a[2]):a[2]=n),t.push(a))}},t}},function(e,t,n){"use strict";n.r(t);const o=function(){function e(){let e;return null===window.localStorage.getItem("todolist")?(e=[],window.localStorage.setItem("todolist",JSON.stringify(e))):e=JSON.parse(window.localStorage.getItem("todolist")),e}return{getStorage:e,addProject:function(t){const n=e();n.push(t),window.localStorage.setItem("todolist",JSON.stringify(n))},deleteProject:function(t){if(window.confirm("Do you want to remove that project?")){const n=e();n.splice(t,1),window.localStorage.setItem("todolist",JSON.stringify(n))}},addTodo:function(t,n){const o=e();o[t].pocket.push(n),window.localStorage.setItem("todolist",JSON.stringify(o))},deleteTodo:function(t,n){if(window.confirm("Do you want to remove that task?")){const o=e();o[t].pocket.splice(n,1),window.localStorage.setItem("todolist",JSON.stringify(o))}},updateTodo:function(t,n,o){if(window.confirm("Do you want to edit that task?")){const r=e();r[t].pocket[n]=o,window.localStorage.setItem("todolist",JSON.stringify(r))}}}};var r=function(e,t,n,o,r,i=!1){return{title:e,description:t,dueDate:n,priority:o,notes:r,checklist:i}};var i=function(e,t=[]){return{name:e,pocket:t}};const d=function(e,t){const n=document.createElement(e);return n.className=t,n},c=function(e,t,n){const o=document.createElement(e);return o.className=t,o.innerHTML=n,o};n(0);document.getElementById("submitProject").addEventListener("click",(function(){const e=document.getElementById("nameProject").value,t=o(),n=i(e);t.addProject(n),document.getElementById("closeModalButton1").click(),document.getElementById("projectForm").reset(),l()}));const a=function(e){o().deleteProject(e),location.reload()};function l(){const e=o().getStorage(),t=document.getElementById("projects");t.innerHTML="",e.forEach((e,n)=>{const{name:o}=e,r=d("li","project"),i=c("span","project",o),l=d("i","far fa-trash-alt");r.appendChild(i),r.appendChild(l),t.appendChild(r),i.addEventListener("click",u.bind(this,n)),l.addEventListener("click",a.bind(this,n))})}function u(e){document.getElementById("todoList").innerHTML="",document.getElementById("addTodoButton").style.display="block";const t=document.getElementById("displayProjectName"),n=o().getStorage(),r=n[e].name;t.innerHTML=r+" ToDoÂ´s";document.getElementById("projectId").innerHTML=e;const i=document.getElementById("todoList");n[e].pocket.forEach((t,n)=>{const o=d("div","card border-primary mb-3");o.style="max-width: 18rem;";const r=c("div","card-header",t.title),a=d("div","card-body text-primary"),l=c("h5","card-title",t.description),u=t.notes+" "+t.dueDate+" "+t.priority,f=c("p","card-text",u),p=d("footer","card-footer bg-transparent border-primary"),y=d("i","far fa-edit"),g=d("i","far fa-trash-alt");document.getElementById("todoId");p.appendChild(y),p.appendChild(g),o.appendChild(r),i.appendChild(o),a.appendChild(l),a.appendChild(f),o.appendChild(a),o.appendChild(p),g.addEventListener("click",s.bind(this,e,n)),y.addEventListener("click",m.bind(this,e,n))})}function s(e,t){o().deleteTodo(e,t),u(e)}function m(e,t){document.getElementById("addTodoButton").click(),p();document.getElementById("todoId").innerHTML=t;const n=o().getStorage()[e].pocket[t];document.getElementById("titleTodo").value=n.title,document.getElementById("descriptionTodo").value=n.description,document.getElementById("notesTodo").value=n.notes,document.getElementById("dueDateTodo").value=n.dueDate;const r=n.priority.toLowerCase()+"P";document.getElementsByClassName(r)[0].checked=!0}function f(){const e=document.getElementById("titleTodo").value,t=document.getElementById("descriptionTodo").value,n=document.getElementById("notesTodo").value;return[e,t,document.getElementById("dueDateTodo").value,document.querySelector('input[name="priority"]:checked').value,n]}l();document.getElementById("submitTodo").addEventListener("click",(function(){const e=f(),t=r(e[0],e[1],e[2],e[3],e[4]),n=document.getElementById("projectId").innerHTML;o().addTodo(n,t),document.getElementById("closeModalButton").click(),document.getElementById("todoForm").reset(),u(n)}));const p=function(){document.getElementById("submitTodo").style.display="none";document.getElementById("editTodo").style.display="block"};document.getElementById("addTodoButton").addEventListener("click",(function(){document.getElementById("submitTodo").style.display="block";document.getElementById("editTodo").style.display="none"}));document.getElementById("editTodo").addEventListener("click",(function(){const e=document.getElementById("projectId").innerHTML,t=document.getElementById("todoId").innerHTML,n=f(),r={title:n[0],description:n[1],dueDate:n[2],priority:n[3],notes:n[4]};o().updateTodo(e,t,r),document.getElementById("todoId").innerHTML="";document.getElementById("closeModalButton").click(),document.getElementById("todoForm").reset(),u(e)}))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,